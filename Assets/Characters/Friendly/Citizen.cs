using System;using System.Collections;using System.Collections.Generic;using Parameter;using UnityEngine;using MasterData;using TalkSystem;using FriendlyAbility = Parameter.CharacterParameters.FriendlyAbility;namespace Character {    public class Citizen : IFriendly {        private readonly int ID;        private readonly long UNIQUE_ID;        private readonly string NAME;        private readonly List<string> MASSAGES;        private Container container;        private Dictionary<FriendlyAbility, int> abilities = new Dictionary<FriendlyAbility, int>(){
            {FriendlyAbility.DEX,0},            {FriendlyAbility.SPC,0}
        };        public Citizen(CitizenBuilder builer){            this.ID = builer.getId();            this.NAME = builer.getName();            this.MASSAGES = builer.getMassges();            this.UNIQUE_ID = UniqueIdCreator.creatUniqueId();            var modelPrefab = (GameObject)Resources.Load("Models/" + builer.getModelId());            container = MonoBehaviour.Instantiate(modelPrefab).GetComponent<Container>();        }        public void act() {            //実装まだです        }        public void death() {            MonoBehaviour.Destroy(container.getModel());        }        public Container getContainer() {            return container;        }        public string getName() {            return NAME;        }        public int getRawFriendlyAbility(FriendlyAbility ability) {            return abilities[ability];        }        public long getUniqueId() {            return UNIQUE_ID;        }        public void talk(IFriendly friendly) {            TalkManager.getInstance().talk(MASSAGES);        }    }}